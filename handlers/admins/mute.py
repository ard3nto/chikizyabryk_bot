from aiogram import types
from loader import bot, dp, logging

from aiogram.utils.exceptions import (
    ChatAdminRequired, 
    MethodNotAvailableInPrivateChats, 
    CantDemoteChatCreator,
    CantRestrictSelf, 
    NotEnoughRightsToRestrict,
    MethodIsNotAvailable
)

import html

import datetime

from functions import restrict_command_processors as cmd_proc_func
from functions.reply_checker import check_for_reply as is_reply
from functions.check_permission import check_permission

@dp.message_handler(commands=['mute', '–º—É—Ç', '–∑–∞–≥–ª—É—à–∏—Ç–∏'], commands_prefix="!.", chat_type=["group", "supergroup"], is_admin=True)
async def mute(msg: types.Message):
    if not await is_reply(msg):
        return
    if not await check_permission(msg):
        return
    until_date = await cmd_proc_func.restrict_command_processor(msg)
    if not until_date:
        return
    try:
        await bot.restrict_chat_member(msg.chat.id, msg.reply_to_message.from_user.id, types.ChatPermissions(False), until_date=until_date)
        status = True
    except ChatAdminRequired:
        await msg.reply('–Ø –±—É–¥—É –¥—É–∂–µ —Ä–∞–¥–∏–π, —è–∫—â–æ –º–µ–Ω—ñ –≤–∏–¥–∞–¥—É—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–Ω—ñ—Ç—Å—Ä–∞—Ç–æ—Ä–∞, —â–æ–± —è –∑–º—ñ–≥ –≤–∏–∫–æ–Ω–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É üòÖ')
        return
    except MethodIsNotAvailable:
        await msg.reply('üëÆ –¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –¥–ª—è –≥—Ä—É–ø –∑ 2+ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏')
        return
    except MethodNotAvailableInPrivateChats:
        await msg.reply('üò≥ –Ø –Ω–µ –∑–Ω–∞—é —è–∫ –≤–∞–º –≤–¥–∞–ª–æ—Å—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É —É –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö, –∞–ª–µ —Ç–∞–∫–æ–≥–æ —Ä–æ–±–∏—Ç–∏ –Ω–µ–º–æ–∂–Ω–∞')
        return
    except CantDemoteChatCreator:
        await msg.reply('ü§î –•–º, –Ω–∞–∫–ª–∞—Å—Ç–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è –Ω–∞ –≤–ª–∞—Å–Ω–∏–∫–∞ —á–∞—Ç—É...\n–©–æ—Å—å –Ω–æ–≤–µ–Ω—å–∫–µ..')
        return
    except CantRestrictSelf:
        await msg.reply('–°–∞–º —Å–µ–±–µ –æ–±–º–µ–∂–∏—Ç–∏ —è –Ω–µ –∑–º–æ–∂—É, –¥–æ–≤–µ–¥–µ—Ç—å—Å—è –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ –≤–ª–∞—Å–Ω–æ—Ä—É—á\n¬Ø\_(„ÉÑ)_/¬Ø')
        return
    except NotEnoughRightsToRestrict:
        await msg.reply('ü§≠ –£ –º–µ–Ω–µ –Ω–µ–º–∞—î –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ —â–æ–± –æ–±–º–µ–∂–∏—Ç–∏ —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
        return
    except Exception as e:
        # e = translator.translate(str(e))
        logging.error(f'While muting the user an error occurred: {e}')
        return
    if until_date.seconds == 1:
        await msg.answer(f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ <a href="tg://user?id={msg.reply_to_message.from_user.id}">{html.escape(msg.reply_to_message.from_user.full_name)}</a> –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–∑–∞–≤–∂–¥–∏')
        return
    await msg.answer(f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ <a href="tg://user?id={msg.reply_to_message.from_user.id}">{html.escape(msg.reply_to_message.from_user.full_name)}</a> –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ {(datetime.datetime.now() + until_date).strftime("%m/%d/%Y, %H:%M")}')